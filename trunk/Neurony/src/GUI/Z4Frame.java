package GUI;

import Logic.zad4.BoxPanel;
import Logic.zad4.Hopfield;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.SwingConstants;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Z4Frame.java
 *
 * Created on 2010-01-24, 11:07:28
 */

/**
 *
 * @author Pawel
 */
public class Z4Frame extends javax.swing.JFrame {



    private BoxPanel[][] boxes = new BoxPanel[BoxPanel.SIZE][BoxPanel.SIZE];
    private Hopfield hope = new Hopfield();
    /** Creates new form Z4Frame */
    public Z4Frame() {
        initComponents();
        setSize(new Dimension(330, 370));
        setResizable(false);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

        FlowLayout layout = new FlowLayout();

        Container contentPane = getContentPane();
        contentPane.setLayout(layout);

        JPanel imagePanel = new JPanel();
        imagePanel.setBackground(new Color(0, 0, 0));
        imagePanel.setPreferredSize(new Dimension(300, 300));
        imagePanel.setVisible(true);
        imagePanel.setLayout(new GridLayout(10, 10, 1, 1));

        for (int i = 0; i < BoxPanel.SIZE; i++) {
            for (int j = 0; j < BoxPanel.SIZE; j++) {
                boxes[i][j] = new BoxPanel();
                imagePanel.add(boxes[i][j]);
            }
        }

        KolejnyPrzyklad pokazPrzyklad = new KolejnyPrzyklad();
        HopfieldButton hopfieldButton = new HopfieldButton();

        contentPane.add(imagePanel);

        contentPane.add(pokazPrzyklad);
        contentPane.add(hopfieldButton);
        contentPane.add(new JSeparator(SwingConstants.HORIZONTAL));

        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 431, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Z4Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public class KolejnyPrzyklad extends JButton {
        int tmp = 0;

        public KolejnyPrzyklad() {
            super();
            setVisible(true);
            setText("Kolejny Przyklad");
            addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {

                    if (Hopfield.iloscPrzykladow != 0) {
                        for (int i = 0; i < BoxPanel.SIZE; i++) {
                            for (int j = 0; j < BoxPanel.SIZE; j++) {

                                int colorValue = (hope.getPrzyklady()[tmp % Hopfield.iloscPrzykladow][i + j * BoxPanel.SIZE] == 1) ? 255 : 0;

                                boxes[j][i].setBackground(new Color(colorValue, colorValue, colorValue));
                                boxes[j][i].setKolor(colorValue);
                            }
                        }
                    }
                    tmp++;
                }
            });
        }
    }


    public class HopfieldButton extends JButton {

        public HopfieldButton() {
            super();
            setVisible(true);
            setText("Rozpoznaj");
            addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    if (Hopfield.iloscPrzykladow != 0) {
                        int[] example = new int[Hopfield.rozmiarPrzykladu];
                        for (int i = 0; i < BoxPanel.SIZE; i++) {
                            for (int j = 0; j < BoxPanel.SIZE; j++) {
                                example[BoxPanel.SIZE * i + j] = ((double) boxes[i][j].getKolor() == 255) ? 1 : -1;
                            }
                        }
                        hope.recognize(example, boxes);
                    }
                }
            });

        }
    }
}
