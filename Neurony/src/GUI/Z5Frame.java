/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Z5Frame.java
 *
 * Created on 2010-02-01, 21:48:02
 */

package GUI;

import Logic.zad5.Graf;
import Logic.zad5.Punkt;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.UIManager;

/**
 *
 * @author Pawel
 */
public class Z5Frame extends javax.swing.JFrame {

    Graf graf = null;

    private final int GRAPH_PANEL_WIDTH = 400;
    private final int GRAPH_PANEL_HEIGHT = 400;
    private BufferedImage bi = null;
    private final Color FIGURE_COLOR = Color.YELLOW;

    public Z5Frame() {
        initComponents();
        graf = new Graf(2, 0);
        bi = new BufferedImage(GRAPH_PANEL_WIDTH, GRAPH_PANEL_HEIGHT, BufferedImage.TYPE_INT_ARGB);
        clearBufferedImage();
    }


    private void clearBufferedImage() {
        int col = Color.WHITE.getRGB();
        for (int i = 0; i < bi.getWidth(); i++) {
            for (int j = 0; j < bi.getHeight(); j++) {
                bi.setRGB(i, j, col);
            }
        }
        imageJPanel1.setImage(bi);
        imageJPanel1.updateUI();
    }

    private void drawSquare(int x, int y, int a, Color color) {
        int col = color.getRGB();

        for (int i = 0; i <= a; i++) {
            for (int j = 0; j <= a; j++) {
                setPixel(x + i, y + j, col);
            }
        }

    }

    private void setPixel(int x, int y, int c) {
        if (x >= 0 && x < bi.getWidth() && y >= 0 && y < bi.getHeight()) {
            bi.setRGB(x, y, c);
        }
    }







    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageJPanel1 = new GUI.ImageJPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        imageJPanel1.setPreferredSize(new java.awt.Dimension(400, 400));

        javax.swing.GroupLayout imageJPanel1Layout = new javax.swing.GroupLayout(imageJPanel1);
        imageJPanel1.setLayout(imageJPanel1Layout);
        imageJPanel1Layout.setHorizontalGroup(
            imageJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );
        imageJPanel1Layout.setVerticalGroup(
            imageJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        jButton1.setText("Img1");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Img2");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Kohen");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("Img3");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jLabel1.setText("Ilość wierzchołków:");

        jLabel2.setText("Ilość iteracji:");

        jTextField1.setText("100");

        jTextField2.setText("100000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        clearBufferedImage();
        drawSquare(50, 50, 300, FIGURE_COLOR);
        drawSquare(75, 75, 250, Color.WHITE);
        imageJPanel1.setImage(bi);
        imageJPanel1.updateUI();
        repaint();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
       clearBufferedImage();
        drawSquare(20, 20, 360, FIGURE_COLOR);
        drawSquare(60, 20, 120, Color.WHITE);
        drawSquare(60, 140, 120, Color.WHITE);
        drawSquare(60, 220, 120, Color.WHITE);
        drawSquare(220, 60, 120, Color.WHITE);
        drawSquare(220, 180, 120, Color.WHITE);
        drawSquare(220, 260, 120, Color.WHITE);
        imageJPanel1.setImage(bi);
        imageJPanel1.updateUI();
        repaint();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        clearBufferedImage();
        drawCircle(200, 200, 180, FIGURE_COLOR);
        drawCircle(200, 200, 150, Color.WHITE);
        drawSquare(20, 75, 250, Color.WHITE);
        repaint();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked

        int iloscWierzcholkow = Integer.parseInt(jTextField1.getText());
        int iloscIteracji = Integer.parseInt(jTextField2.getText());

        graf.setIloscIteracji(iloscIteracji);
        graf.setIloscWierzcholkow(iloscWierzcholkow);

        ucz();
        ////////
        drawGraph();
        imageJPanel1.setImage(bi);
        imageJPanel1.updateUI();
    }//GEN-LAST:event_jButton3MouseClicked

    private void drawCircle(int x, int y, int r, Color color) {
        int col = color.getRGB();

        for (int i = -r; i <= r; i++) {
            int max = (int) Math.sqrt(r * r - i * i);
            for (int j = -max; j <= max; j++) {
                setPixel(x + i, y + j, col);
            }
        }

    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Z5Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.ImageJPanel imageJPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private void ucz() {
        Vector<Punkt> punkty = new Vector();
        for (int i = 0; i < GRAPH_PANEL_WIDTH; i++) {
            for (int j = 0; j < GRAPH_PANEL_HEIGHT; j++) {
                int rgb = bi.getRGB(i, j);
                if (rgb == FIGURE_COLOR.getRGB()) {
                    Punkt point = new Punkt(new double[]{i, j});
                    punkty.add(point);
                }
            }
        }

        System.out.println("Rozmmiar: " + punkty.size());

        graf.Kohonen(punkty);

    }

    private void drawGraph() {
        if (graf == null) {
            return;
        }
        for (int i = 0; i < graf.getIloscWierzcholkow(); i++) {

            int x = (int) graf.pobierzWierzcholek(i).getWage(0);
            int y = (int) graf.pobierzWierzcholek(i).getWage(1);

            Graphics g2 = bi.getGraphics();

            // rysowanie wierzchołka
            g2.setColor(Color.RED);
            g2.fillOval(x, y, 4, 4);

            // rysowanie krawędzi
            g2.setColor(Color.BLACK);
            for (int j = 0; j < graf.pobierzIloscSasiadow(i); j++) {
                int x1 = (int) graf.pobierzSasiada(i, j).getWage(0);
                int y1 = (int) graf.pobierzSasiada(i, j).getWage(1);
                g2.drawLine(x, y, x1, y1);
            }
        }
       
    }

}
